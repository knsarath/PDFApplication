apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.hp.augmentedprint"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "x86_64", "arm64-v8a", "armeabi-v7a", "armeabi", "mips"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //testImplementation 'junit:junit:4.12'

    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    //support libraries
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"

    //Rxjava
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxAndroidVersion"


    //Logging
    implementation "com.jakewharton.timber:timber:$rootProject.ext.timberVersion"

    implementation "com.spinner.dropdown:spinner:$rootProject.ext.dropDownVersion"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okHttpVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitRxJavaAdapterVersion"

    //Dagger 2
    implementation "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.ext.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.ext.daggerVersion"

    //PDF
    implementation "com.github.barteksc:android-pdf-viewer:$rootProject.ext.pdfLibraryVersion"

    //qrcode
    compile 'me.dm7.barcodescanner:zxing:1.9'

//    compile('com.journeyapps:zxing-android-embedded:3.6.0') { transitive = false }
//    compile 'com.android.support:appcompat-v7:25.3.1'   // Version 23+ is required
//    compile 'com.google.zxing:core:3.3.0'
//
//    compile 'com.journeyapps:zxing-android-embedded:3.6.0'
//    compile 'com.android.support:appcompat-v7:25.3.1'   // Minimum 23+ is required


    testImplementation 'junit:junit:4.12'
}
